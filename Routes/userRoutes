const User = require('../models/User');
const {Router} = require('express');
const router = Router();
const jwt = require('jsonwebtoken');
const secretKey = "Sarang";

router.post("/signup", async (req, res) => {
    const { name, email, password , username} = req.body;
    if (!email || !password) return res.status(400).json({ error: "All fields are required" });

    try {
        const hashedPassword = await bcrypt.hash(password, 10);
        const newUser = new User({ email, password: hashedPassword, name, username });
        await newUser.save();
        res.status(201).json({ message: "User registered successfully" });
    } catch (error) {
        res.status(500).json({ error: "User already exists or server error" });
    }
});

router.post("/login", async (req, res) => {
    const { email, password } = req.body;

    const user = await User.findOne({ email });
    if (!user) return res.status(400).json({ error: "User not found" });

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) return res.status(401).json({ error: "Invalid credentials" });

    const token = jwt.sign({ id: user._id, email: user.email }, secretKey, { expiresIn: "1h" });

    res.cookie("jwt", token, {
        httpOnly: true,
        secure: process.env.NODE_ENV === "production",
        sameSite: "Lax",
        maxAge: 3600000 // 1 hour
    });

    res.json({ message: "Login successful", token });
});

module.exports = router;